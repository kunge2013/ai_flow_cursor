version: '3.8'

services:
  # Milvus Lite 向量数据库
  milvus-lite:
    image: milvusdb/milvus-lite:latest
    container_name: milvus-lite
    ports:
      - "19530:19530"  # Milvus gRPC端口
      - "9091:9091"    # Milvus HTTP端口
      - "9092:9092"    # Milvus 内部端口
    environment:
      - MILVUS_HOST=milvus-lite
      - MILVUS_PORT=19530
      - ETCD_ENDPOINTS=etcd:2379
      - MINIO_ADDRESS=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
    volumes:
      - milvus_data:/var/lib/milvus
      - milvus_logs:/var/log/milvus
    depends_on:
      - etcd
      - minio
    networks:
      - milvus-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # etcd 元数据存储
  etcd:
    image: quay.io/coreos/etcd:v3.5.5
    container_name: milvus-etcd
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - etcd_data:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    networks:
      - milvus-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MinIO 对象存储
  minio:
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    container_name: milvus-minio
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - minio_data:/minio_data
    command: minio server /minio_data --console-address ":9001"
    ports:
      - "9000:9000"    # MinIO API端口
      - "9001:9001"    # MinIO Console端口
    networks:
      - milvus-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Milvus 管理界面 (可选)
  milvus-admin:
    image: milvusdb/milvus-admin:latest
    container_name: milvus-admin
    ports:
      - "3000:3000"
    environment:
      - MILVUS_URL=http://milvus-lite:9091
    depends_on:
      - milvus-lite
    networks:
      - milvus-network
    restart: unless-stopped

  # Redis 缓存 (可选，用于提升性能)
  redis:
    image: redis:7-alpine
    container_name: milvus-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - milvus-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  milvus_data:
    driver: local
  milvus_logs:
    driver: local
  etcd_data:
    driver: local
  minio_data:
    driver: local
  redis_data:
    driver: local

networks:
  milvus-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 